[General]
# >隐藏VPN图标
hide-VPN-icon=false
# > 增强版 Wi-Fi 助理
# (在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启)
wifi-assist = false
# > Internet 测试 URL
internet-test-url = http://wifi.vivo.com.cn/generate_204
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# > 测试超时（秒）
test-timeout = 5
# > 自定义 GeoIP 数据库
geoip-maxmind-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# > IPv6 支持（默认关闭）
ipv6 = false
# > 允许 Wi-Fi 访问 (仅 iOS，若允许远程访问将「false」改为「true」)
allow-wifi-access = false
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153
# > 允许 Wi-Fi 访问 (仅 macOS，若允许远程访问将「127.0.0.1」改为「0.0.0.0」)
http-listen = 127.0.0.1:6152
socks5-listen = 127.0.0.1:6153
# > 兼容模式 (仅 iOS)
# compatibility-mode = 0
# > 跳过代理
skip-proxy = localhost, *.local, passenger.t3go.cn, e.crashlytics.com, captive.apple.com, seed-sequoia.siri.apple.com, sequoia.apple.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, *.id.ui.direct, www.baidu.com, yunbusiness.ccb.com, wxh.wo.cn, gate.lagou.com, www.abchina.com.cn, mbank.psbc.com, ibfp.psbc.com, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.1/32, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 192.168.122.1/32, 193.168.0.1/32, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255/32, ::1/128, fc00::/7, fd00::/8, fe80::/10, ff00::/8, 2001::/32, 2001:db8::/32, 2002::/16, ::ffff:0:0:0:0/1, ::ffff:128:0:0:0/1
# > 排除简单主机名
exclude-simple-hostnames = true
# > Network framwork
network-framework = false
# > DNS 服务器 (如无必要不建议使用 DNS over HTTPS)
dns-server = 119.29.29.29,223.5.5.5
# > 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true
# 高级设置
# > 日志级别
loglevel = notify
# > 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true
# > Always Real IP Hosts
always-real-ip = *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.logon.battlenet.com.cn, *.logon.battle.net, stun.l.google.com
# 如果没有代理服务器支持 UDP 转发，可修改为「 direct 」或注释下条，但需注意同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
udp-policy-not-supported-behaviour = reject

[Replica]
# 0 为关闭，1 为开启
# > 隐藏 Apple 请求
hide-apple-request = 0
# > 隐藏崩溃追踪器请求
hide-crash-reporter-request = 1
# > 隐藏 UDP 会话
hide-udp = 0
# > 关键词过滤器
# none（关闭关键词过滤器） / whitelist（blacklist（仅记录包含关键字的请求）） / blacklist（仅记录不包含关键字的请求） / pattern（匹配通配符的请求）
# keyword-filter-type = none
# > 关键词
# keyword-filter = (null)

[Proxy]
𝐃𝐈𝐑𝐄𝐂𝐓 = direct
𝐑𝐄𝐉𝐄𝐂𝐓 = reject
# 该段定义可用的策略组
# 一个策略组可以包括多个子策略.
# 子策略可以是一个代理策略，或者另一个策略组，或者是一个内置策略 (DIRECT 或 REJECT).
# 有 5 种策略组类型: "select", "url-test" 和 "ssid" "fallback" "load-balance"
# select: 具体哪个子策略将被使用，由用户界面上进行选择。
# url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择
# 参数:
# url: 必填
# 测试时用到的目标 URL.
# interval: 可选, 秒 (默认值: 600s)
# 指定在多长时间后，上次的测试结果将被抛弃。
# tolerance: 可选, 毫秒 (默认值: 100ms)
# 只有当新的优选线路，比原优选线路的响应时间，大于该值的时候，才会触发线路变更。
# timeout: 可选, 秒 (默认值: 5s)
# 如果某策略在该时间后依然没有完成，放弃该策略。
# ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID 决定
# fallback: 如果正在使用的策略不可用按顺序回退可用节点
# load-balance: 通过节点负载均衡增加吞吐量加强网络数据处理能力、提高应用系统的灵活和可用性 但是使用的时候打开pcc 让相同的域名走同一个策略

[Proxy Group]
# 代理选择
𝐏𝐫𝐨𝐱𝐲 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# 奈飞策略组
𝐍𝐄𝐓𝐅𝐋𝐈𝐗 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Google
𝐆𝐨𝐨𝐠𝐥𝐞 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# telegram
𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Spotify
𝐒𝐏𝐎𝐓𝐈𝐅𝐘 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# openai
𝐎𝐏𝐄𝐍𝐀𝐈 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Instagram
𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# TikTok
𝐓𝐢𝐤𝐓𝐨𝐤 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# WhatsApp
𝐖𝐡𝐚𝐭𝐬𝐀𝐩𝐩 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# YouTube
𝐘𝐨𝐮𝐓𝐮𝐛𝐞 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Disney
𝐃𝐢𝐬𝐧𝐞𝐲 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Facebook
𝐅𝐚𝐜𝐞𝐛𝐨𝐨𝐤 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# Twitter
𝐓𝐰𝐢𝐭𝐭𝐞𝐫 = select, 𝐇𝐊, 𝐓𝐖, 𝐒𝐆, 𝐉𝐏, 𝐊𝐑, 𝐔𝐒, no-alert=0, hidden=0, include-all-proxies=0
# 香港
𝐇𝐊 = select, policy-path=订阅链接, policy-regex-filter=(香港|HK|Hong|🇭🇰)
# 台湾
𝐓𝐖 = select, policy-path=订阅链接, policy-regex-filter=(台湾|TW|Tai)
# 新加坡
𝐒𝐆 = select, policy-path=订阅链接, policy-regex-filter=(新加坡|狮城|SG|Singapore|🇸🇬)
# 日本
𝐉𝐏 = select, policy-path=订阅链接, policy- regex-filter=(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|🇯🇵)
# 美国
𝐔𝐒 = select, policy-path=订阅链接, policy-regex-filter=(美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United|America|🇺🇸)
# 韩国
𝐊𝐑 = select, policy-path=订阅链接, policy-regex-filter=(KR|Korea|KOR|首尔|韩国|🇰🇷)

[Rule]
RULE-SET,https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/Adblock4limbo_surge.list,𝐑𝐄𝐉𝐄𝐂𝐓
OR,((IP-ASN,44907,no-resolve), (IP-ASN,59930,no-resolve), (IP-ASN,62014,no-resolve), (IP-ASN,62041,no-resolve), (IP-ASN,211157,no-resolve)),𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Bahamut/Bahamut.list,𝐓𝐖
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Whatsapp/Whatsapp.list,𝐖𝐡𝐚𝐭𝐬𝐀𝐩𝐩
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TikTok/TikTok.list,𝐓𝐢𝐤𝐓𝐨𝐤
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/DiscoveryPlus/DiscoveryPlus.list,𝐃𝐢𝐬𝐧𝐞𝐲
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Instagram/Instagram.list,𝐈𝐧𝐬𝐭𝐚𝐠𝐫𝐚𝐦
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Facebook/Facebook.list,𝐅𝐚𝐜𝐞𝐛𝐨𝐨𝐤
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Netflix/Netflix.list,𝐍𝐄𝐓𝐅𝐋𝐈𝐗
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/YouTube/YouTube.list,𝐘𝐨𝐮𝐓𝐮𝐛𝐞
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list,𝐆𝐨𝐨𝐠𝐥𝐞
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Spotify/Spotify.list,𝐒𝐏𝐎𝐓𝐈𝐅𝐘
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Twitter/Twitter.list,𝐓𝐰𝐢𝐭𝐭𝐞𝐫
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/OpenAI/OpenAI.list,𝐎𝐏𝐄𝐍𝐀𝐈
RULE-SET,https://raw.githubusercontent.com/NobyDa/Script/master/Surge/WeChat.list,𝐃𝐈𝐑𝐄𝐂𝐓
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list,𝐃𝐈𝐑𝐄𝐂𝐓
RULE-SET,https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list,𝐏𝐫𝐨𝐱𝐲
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Global/Global_Domain.list,𝐏𝐫𝐨𝐱𝐲
RULE-SET,LAN,𝐃𝐈𝐑𝐄𝐂𝐓
RULE-SET,https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list,𝐃𝐈𝐑𝐄𝐂𝐓
OR,((DEST-PORT,25), (DEST-PORT,110), (DEST-PORT,143)),𝐃𝐈𝐑𝐄𝐂𝐓
AND,((OR,((DOMAIN,time-ios.apple.com), (DOMAIN,time.apple.com), (DOMAIN-SUFFIX,pool.ntp.org))), (DEST-PORT,123)),𝐃𝐈𝐑𝐄𝐂𝐓
GEOIP,CN,𝐃𝐈𝐑𝐄𝐂𝐓
FINAL,𝐏𝐫𝐨𝐱𝐲,dns-failed

[URL Rewrite]
^https?://(www.)?(g|google).cn https://www.google.com/ 302

[MITM]
hostname = www.google.cn

